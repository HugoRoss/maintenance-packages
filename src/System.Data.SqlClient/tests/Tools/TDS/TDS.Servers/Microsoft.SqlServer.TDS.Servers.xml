<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.SqlServer.TDS.Servers</name>
    </assembly>
    <members>
        <member name="T:Microsoft.SqlServer.TDS.Servers.ApplicationIntentFilterType">
            <summary>
            Type of application intent filter
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.TDS.Servers.ApplicationIntentFilterType.None">
            <summary>
            Filter out all requests and don't let anyone connect
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.TDS.Servers.ApplicationIntentFilterType.ReadOnly">
            <summary>
            Allow read connections only
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.TDS.Servers.ApplicationIntentFilterType.All">
            <summary>
            Don't filter anything and let everyone connect
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.TDS.Servers.AuthenticatingTDSServer">
            <summary>
            TDS Server that authenticates clients according to the requested parameters
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.AuthenticatingTDSServer.#ctor">
            <summary>
            Initialization constructor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.AuthenticatingTDSServer.#ctor(Microsoft.SqlServer.TDS.Servers.AuthenticatingTDSServerArguments)">
            <summary>
            Initialization constructor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.AuthenticatingTDSServer.OnLogin7Request(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession,Microsoft.SqlServer.TDS.TDSMessage)">
            <summary>
            Handler for login request
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.TDS.Servers.AuthenticatingTDSServerArguments">
            <summary>
            Arguments for authenticating TDS Server
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.AuthenticatingTDSServerArguments.ApplicationIntentFilter">
            <summary>
            Type of the application intent filter
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.AuthenticatingTDSServerArguments.ServerNameFilter">
            <summary>
            Filter for server name
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.AuthenticatingTDSServerArguments.ServerNameFilterType">
            <summary>
            Type of the filtering algorithm to use
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.AuthenticatingTDSServerArguments.PacketSizeFilter">
            <summary>
            TDS packet size filtering
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.AuthenticatingTDSServerArguments.ApplicationNameFilter">
            <summary>
            Filter for application name
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.AuthenticatingTDSServerArguments.#ctor">
            <summary>
            Initialization constructor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.TDS.Servers.DateFormatString">
            <summary>
            Class that converts date format from string to enumeration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.DateFormatString.ToEnum(System.String)">
            <summary>
            Convert a language to enumeration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.DateFormatString.ToString(Microsoft.SqlServer.TDS.DateFormatType)">
            <summary>
            Convert enumeration to string
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.TDS.Servers.FederatedAuthenticationNegativeTDSServer">
            <summary>
            TDS Server that generates invalid TDS scenarios according to the requested parameters
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.FederatedAuthenticationNegativeTDSServer.#ctor">
            <summary>
            Initialization constructor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.FederatedAuthenticationNegativeTDSServer.#ctor(Microsoft.SqlServer.TDS.Servers.FederatedAuthenticationNegativeTDSServerArguments)">
            <summary>
            Initialization constructor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.FederatedAuthenticationNegativeTDSServer.OnPreLoginRequest(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession,Microsoft.SqlServer.TDS.TDSMessage)">
            <summary>
            Handler for login request
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.FederatedAuthenticationNegativeTDSServer.OnLogin7Request(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession,Microsoft.SqlServer.TDS.TDSMessage)">
            <summary>
            Handler for login request
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.TDS.Servers.FederatedAuthenticationNegativeTDSServerArguments">
            <summary>
            Arguments for Fed Auth Negative TDS Server
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.FederatedAuthenticationNegativeTDSServerArguments.Scenario">
            <summary>
            Type of the Fed Auth Negative TDS Server
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.FederatedAuthenticationNegativeTDSServerArguments.#ctor">
            <summary>
            Initialization constructor
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.TDS.Servers.FederatedAuthenticationNegativeTDSScenarioType.ValidScenario">
            <summary>
            Valid Scenario. Do not perform negative activity.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.TDS.Servers.FederatedAuthenticationNegativeTDSScenarioType.NonceMissingInFedAuthFEATUREXTACK">
            <summary>
            Nonce is missing from LOGIN7 response in FedAuth's FEATUREEXTACK
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.TDS.Servers.FederatedAuthenticationNegativeTDSScenarioType.NonceMissingInFedAuthPreLogin">
            <summary>
            Nonce is missing from PRELOGIN response in FedAuth
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.TDS.Servers.FederatedAuthenticationNegativeTDSScenarioType.FedAuthMissingInFEATUREEXTACK">
            <summary>
            FedAuth is missing from FEATUREEXTACK Login response when it is expected
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.TDS.Servers.FederatedAuthenticationNegativeTDSScenarioType.InvalidB_FEDAUTHREQUIREDResponse">
            <summary>
            Invalid B_FEDAUTHREQUIRED response
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.TDS.Servers.FederatedAuthenticationNegativeTDSScenarioType.SignatureMissingInFedAuthFEATUREXTACK">
            <summary>
            Signature is missing from LOGIN7 response in FedAuth's FEATUREEXTACK
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.TDS.Servers.GenericTDSServer">
            <summary>
            Generic TDS server without specialization
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.TDS.Servers.GenericTDSServer._sessionCount">
            <summary>
            Session counter
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServer.Arguments">
            <summary>
            Server configuration
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServer.Engine">
            <summary>
            Query engine instance
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.GenericTDSServer.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.GenericTDSServer.#ctor(Microsoft.SqlServer.TDS.Servers.TDSServerArguments)">
            <summary>
            Initialization constructor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.GenericTDSServer.#ctor(Microsoft.SqlServer.TDS.Servers.TDSServerArguments,Microsoft.SqlServer.TDS.Servers.QueryEngine)">
            <summary>
            Initialization constructor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.GenericTDSServer.OpenSession">
            <summary>
            Create a new session on the server
            </summary>
            <returns>A new instance of the session</returns>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.GenericTDSServer.CloseSession(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Notify server of the session termination
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.GenericTDSServer.OnPreLoginRequest(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession,Microsoft.SqlServer.TDS.TDSMessage)">
            <summary>
            Handler for pre-login request
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.GenericTDSServer.OnLogin7Request(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession,Microsoft.SqlServer.TDS.TDSMessage)">
            <summary>
            Handler for login request
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.GenericTDSServer.OnSSPIRequest(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession,Microsoft.SqlServer.TDS.TDSMessage)">
            <summary>
            Handler for SSPI request
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.GenericTDSServer.OnSQLBatchRequest(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession,Microsoft.SqlServer.TDS.TDSMessage)">
            <summary>
            It is called when SQL batch request arrives
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.GenericTDSServer.OnAttention(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession,Microsoft.SqlServer.TDS.TDSMessage)">
            <summary>
            It is called when attention arrives
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.GenericTDSServer.ContinueSSPIAuthentication(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession,System.Byte[])">
            <summary>
            Advances one step in SSPI authentication sequence
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.GenericTDSServer.OnSqlAuthenticationCompleted(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Called by OnLogin7Request when client is using SQL auth. Overridden by subclasses to easily detect when SQL auth is used.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.GenericTDSServer.OnFederatedAuthenticationCompleted(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession,System.Byte[])">
            <summary>
            Complete the Federated Login
            </summary>
            <param name="session">Server session</param>
            <param name="ticket"></param>
            <returns>Federated Login message collection</returns>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.GenericTDSServer.CheckFederatedAuthenticationOption(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession,Microsoft.SqlServer.TDS.Login7.TDSLogin7FedAuthOptionToken)">
            <summary>
            Ensure that federated authentication option is valid
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.GenericTDSServer.CheckTDSVersion(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Checks the TDS version
            </summary>
            <param name="session">Server session</param>
            <returns>Null if the TDS version is supported, errorToken message otherwise</returns>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.GenericTDSServer._GenerateRandomBytes(System.Int32)">
            <summary>
            Generates random bytes
            </summary>
            <param name="count">The number of bytes to be generated.</param>
            <returns>Generated random bytes.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.GenericTDSServer.AreEqual(System.Byte[],System.Byte[])">
            <summary>
            Check if two byte arrays are equal
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession">
            <summary>
            Generic session for TDS Server
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.Server">
            <summary>
            Server that created the session
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.SessionID">
            <summary>
            Session identifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.PacketSize">
            <summary>
            Size of the TDS packet
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.SQLUserID">
            <summary>
            User name if SQL authentication is used
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.NTUserAuthenticationContext">
            <summary>
            Context that indicates the stage of SSPI authentication
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.Database">
            <summary>
            Database to which connection is established
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.Collation">
            <summary>
            Collation
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.TDSVersion">
            <summary>
            TDS version of the communication
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.ServerEndPointInfo">
            <summary>
            Local connection end-point information
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.ClientEndPointInfo">
            <summary>
            Remote connection end-point information
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.Encryption">
            <summary>
            Transport encryption
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.EncryptionCertificate">
            <summary>
            Certificate to use for encryption
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.ClientNonce">
            <summary>
            Nonce option sent by client
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.ServerNonce">
            <summary>
            Nonce option sent by server
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.FedAuthRequiredPreLoginServerResponse">
            <summary>
            FedAuthRequired Response sent by server
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.FederatedAuthenticationLibrary">
            <summary>
            Federated authentication set of libraries to be used
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.ConnectionResetRequestCount">
            <summary>
            Counter of connection reset requests for this session
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.IsSessionRecoveryEnabled">
            <summary>
            Indicates whether this session supports transport-level recovery
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.AnsiDefaults">
            <summary>
            Controls a group of SQL Server settings that collectively specify ISO standard behavior
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.AnsiNullDefaultOn">
            <summary>
            Affects the nullability of new columns when the nullability of the column is not specified in the CREATE TABLE and ALTER TABLE statements.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.AnsiNulls">
            <summary>
            Controls null behavior in T-SQL
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.AnsiPadding">
            <summary>
            Impacts character column behavior (char, varchar, binary, and varbinary)
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.AnsiWarnings">
            <summary>
            Controls certain warning messages required for ansi compliance
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.ArithAbort">
            <summary>
            Terminates a query when an overflow or divide-by-zero error occurs during query execution
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.ArithIgnore">
            <summary>
            Controls whether error messages are returned from overflow or divide-by-zero errors during a query
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.ConcatNullYieldsNull">
            <summary>
            Controls whether concatenation results are treated as null or empty string values
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.ContextInfo">
            <summary>
            Associates up to 128 bytes of binary information with the current session or connection
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.CursorCloseOnCommit">
            <summary>
            Controls whether the server will close cursors when you commit a transaction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.DateFirst">
            <summary>
            Sets the first day of the week to a number from 1 through 7
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.DateFormat">
            <summary>
            Sets the order of the month, day, and year date parts for interpreting date character strings
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.DeadlockPriority">
            <summary>
            Specifies the relative importance that the current session continue processing if it is deadlocked with another session.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.ImplicitTransactions">
            <summary>
            Sets implicit transaction mode for the connection
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.Language">
            <summary>
            Specifies the language environment for the session (language name from sys.syslanguages). The session language determines the datetime formats and system messages.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.LockTimeout">
            <summary>
            Specifies the number of milliseconds a statement waits for a lock to be released
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.NoCount">
            <summary>
            Controls the emitting of Done w/count tokens from Transact-SQL.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.NumericRoundAbort">
            <summary>
            Generates an error when a loss of precision occurs in an expression
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.QuotedIdentifier">
            <summary>
            Causes SQL Server to follow the ISO rules regarding quotation mark delimiting identifiers and literal strings
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.TextSize">
            <summary>
            Specifies the size of varchar(max), nvarchar(max), varbinary(max), text, ntext, and image data returned by a SELECT statement
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.TransactionIsolationLevel">
            <summary>
            Controls the locking and row versioning behavior of Transact-SQL statements issued by a connection to SQL Server.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.TransactionAbortOnError">
            <summary>
            Specifies whether SQL Server automatically rolls back the current transaction when a Transact-SQL statement raises a run-time error
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.#ctor(Microsoft.SqlServer.TDS.EndPoint.ITDSServer,System.UInt32)">
            <summary>
            Initialization constructor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.#ctor(Microsoft.SqlServer.TDS.EndPoint.ITDSServer,System.UInt32,System.UInt32)">
            <summary>
            Initialization constructor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.Inflate(Microsoft.SqlServer.TDS.SessionState.TDSSessionRecoveryData,Microsoft.SqlServer.TDS.SessionState.TDSSessionRecoveryData)">
            <summary>
            Inflate the session state using options
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession.Deflate">
            <summary>
            Serialize session state into a collection of options
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.GenericTDSServerSession._InflateRecoveryData(Microsoft.SqlServer.TDS.SessionState.TDSSessionRecoveryData)">
            <summary>
            Inflate recovery data
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.TDS.Servers.QueryEngine">
            <summary>
            Class that pretends to be a full featured relational engine and returns predefined responses to well-known queries that Topology framework issues
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.QueryEngine.Log">
            <summary>
            Log to which send TDS conversation
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.QueryEngine.ServerArguments">
            <summary>
            Server configuration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine.#ctor(Microsoft.SqlServer.TDS.Servers.TDSServerArguments)">
            <summary>
            Initialization constructor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine.ExecuteBatch(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession,Microsoft.SqlServer.TDS.TDSMessage)">
            <summary>
            Execute the query and produce a response
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine.CreateQueryResponse(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession,Microsoft.SqlServer.TDS.SQLBatch.TDSSQLBatchToken)">
            <summary>
            Create a response for the query
            </summary>
            <param name="session"></param>
            <param name="batchRequest"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine.ExecuteAttention(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession,Microsoft.SqlServer.TDS.TDSMessage)">
            <summary>
            Handle attention from the client
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine._PrepareServerNameResponse(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Prepare response for server name query
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine._PrepareMachineNameResponse(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Prepare response for machine name query
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine._PrepareInstanceNameResponse(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Prepare response for server instance name query
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine._PrepareOleDbReadOnlyUserName(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Prepare response for user nane query that OLE DB stack dispatches upon connection
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine._PrepareIsHADRResponse(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Prepare response for query whether this is a HADRon instance
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine._PrepareIsAzure(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Prepare response for query whether this is a SQL Azure instance
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine._PrepareIsLocalDB(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Prepare response for query whether this is a Local DB instance
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine._PrepareIsTestSQLServerResponse(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Prepare response for query whether this is a test SQL Server instance
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine._PrepareTestSQLServerClassResponse(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Prepare response for query of class of the SQL Server instance
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine._PrepareSessionUserResponse(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Prepare response for session user name query
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine._PrepareConnectionInfoResponse(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Prepare response to the query about connection end-point
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine._PrepareEncryptionInfoResponse(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Prepare response to the query about connection encryption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine._PreparePingResponse(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Prepare response to server ping
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine._PrepareDatabaseResponse(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Prepare current database response
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine._PrepareConfigurationResponse(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Prepare configuration response
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine._PrepareConnectionResetRequestCountResponse(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Prepare response to connection reset request count
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine._PrepareSPIDResponse(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Prepare response to connection reset request count
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine._PrepareAuthSchemeResponse(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Prepare response to connection reset request count
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine._PrepareAnsiDefaultsResponse(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Prepare response for ANSI defaults
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine._PrepareAnsiNullDefaultOnResponse(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Prepare response for ANSI null default on
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine._PrepareAnsiNullsResponse(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Prepare response for ANSI nulls
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine._PrepareAnsiPaddingResponse(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Prepare response for ANSI padding
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine._PrepareAnsiWarningsResponse(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Prepare response for ANSI warnings
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine._PrepareArithAbortResponse(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Prepare response for arithmetic abort
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine._PrepareConcatNullYieldsNullResponse(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Prepare response for concatenation of nulls yields null
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine._PrepareDateFirstResponse(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Prepare response for date first
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine._PrepareDateFormatResponse(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Prepare response for date format
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine._PrepareDeadlockPriorityResponse(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Prepare response for deadlock priority
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine._PrepareLanguageResponse(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Prepare response for language
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine._PrepareLockTimeoutResponse(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Prepare response for lock timeout
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine._PrepareQuotedIdentifierResponse(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Prepare response for quoted identifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine._PrepareTextSizeResponse(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Prepare response for text size
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine._PrepareTransactionIsolationLevelResponse(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Prepare response for transaction isolation level
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine._PrepareOptionsResponse(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Prepare response for options
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.QueryEngine._PrepareContextInfoResponse(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Prepare response for context info
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.TDS.Servers.RoutingTDSServer">
            <summary>
            TDS Server that routes clients to the configured destination
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.RoutingTDSServer.#ctor">
            <summary>
            Initialization constructor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.RoutingTDSServer.#ctor(Microsoft.SqlServer.TDS.Servers.RoutingTDSServerArguments)">
            <summary>
            Initialization constructor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.RoutingTDSServer.OnPreLoginRequest(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession,Microsoft.SqlServer.TDS.TDSMessage)">
            <summary>
            Handler for pre-login request
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.RoutingTDSServer.OnLogin7Request(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession,Microsoft.SqlServer.TDS.TDSMessage)">
            <summary>
            Handler for login request
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.RoutingTDSServer.OnSQLBatchRequest(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession,Microsoft.SqlServer.TDS.TDSMessage)">
            <summary>
            It is called when SQL batch request arrives
            </summary>
            <param name="session">TDS message received</param>
            <param name="request"></param>
            <returns>TDS message to respond with</returns>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.RoutingTDSServer.OnAuthenticationCompleted(Microsoft.SqlServer.TDS.EndPoint.ITDSServerSession)">
            <summary>
            Complete login sequence
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.RoutingTDSServer.CreateRoutingToken">
            <summary>
            Create a new instance of the routing token that instructs client according to the routing destination URL
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.TDS.Servers.RoutingTDSServerArguments">
            <summary>
            Arguments for routing TDS Server
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.RoutingTDSServerArguments.RoutingProtocol">
            <summary>
            Routing destination protocol
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.RoutingTDSServerArguments.RoutingTCPPort">
            <summary>
            Routing TCP port
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.RoutingTDSServerArguments.RoutingTCPHost">
            <summary>
            Routing TCP host name
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.RoutingTDSServerArguments.RouteOnPacket">
            <summary>
            Packet on which routing should occur
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.RoutingTDSServerArguments.RequireReadOnly">
            <summary>
            Indicates that routing should only occur on read-only connections
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.RoutingTDSServerArguments.#ctor">
            <summary>
            Initialization constructor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.TDS.Servers.ServerNameFilterType">
            <summary>
            Type of the filter to apply to server name
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.TDS.Servers.ServerNameFilterType.None">
            <summary>
            Do not perform any filtering
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.TDS.Servers.ServerNameFilterType.Equals">
            <summary>
            Values must strictly match
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.TDS.Servers.ServerNameFilterType.StartsWith">
            <summary>
            Value in the login packet starts with the filtering value
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.TDS.Servers.ServerNameFilterType.EndsWith">
            <summary>
            Value in the login packet ends with the filtering value
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.TDS.Servers.ServerNameFilterType.Contains">
            <summary>
            Value in the login packet contains filtering value
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.TDS.Servers.TDSServerArguments">
            <summary>
            Common arguments for TDS Server
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.TDS.Servers.TDSServerArguments.AzureADServicePrincipalName">
            <summary>
            Service Principal Name, representing Azure SQL Database in Azure Active Directory.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.TDS.Servers.TDSServerArguments.AzureADProductionTokenEndpoint">
            <summary>
            The Azure Active Directory production token endpoint to re-direct the client to fetch a token from.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.TDSServerArguments.Log">
            <summary>
            Log to which send TDS conversation
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.TDSServerArguments.ServerName">
            <summary>
            Server name
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.TDSServerArguments.ServerVersion">
            <summary>
            Server version
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.TDSServerArguments.ServerPrincipalName">
            <summary>
            Server principal name
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.TDSServerArguments.StsUrl">
            <summary>
            Sts Url
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.TDSServerArguments.PacketSize">
            <summary>
            Size of the TDS packet server should operate with
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.TDSServerArguments.Encryption">
            <summary>
            Transport encryption
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.TDSServerArguments.FedAuthRequiredPreLoginOption">
            <summary>
            Specifies the FedAuthRequired option
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.TDS.Servers.TDSServerArguments.EncryptionCertificate">
            <summary>
            Certificate to use for transport encryption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.TDS.Servers.TDSServerArguments.#ctor">
            <summary>
            Initialization constructor
            </summary>
        </member>
    </members>
</doc>
